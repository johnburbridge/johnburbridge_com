name: Release Docker Image

on:
  push:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: johnburbridge/johnburbridge-site

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get semantic version
        id: semver
        run: |
          # Get most recent tag
          LATEST_TAG=$(git describe --tags --abbrev=0 --match "v[0-9]*.[0-9]*.[0-9]*" 2>/dev/null || echo "v0.1.0")
          VERSION="${LATEST_TAG#v}"
          echo "VERSION=${VERSION}" >> $GITHUB_ENV
          echo "version=${VERSION}" >> $GITHUB_OUTPUT

      - name: Get PR number from commit
        id: pr
        run: |
          PR_NUMBER=$(git log -1 --pretty=%s | grep -o '#[0-9]\+' | tr -d '#')
          if [ -n "$PR_NUMBER" ]; then
            echo "PR_NUMBER=${PR_NUMBER}" >> $GITHUB_ENV
            echo "pr_number=${PR_NUMBER}" >> $GITHUB_OUTPUT
          else
            echo "No PR number found in commit message"
            exit 1
          fi

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Pull dev image and retag as release
        run: |
          # Pull the dev image that was built during PR
          DEV_IMAGE="${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}-dev.pr${{ env.PR_NUMBER }}"
          RELEASE_IMAGE="${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}"
          LATEST_IMAGE="${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest"
          
          echo "Pulling development image: ${DEV_IMAGE}"
          docker pull ${DEV_IMAGE}
          
          echo "Tagging and pushing release image: ${RELEASE_IMAGE}"
          docker tag ${DEV_IMAGE} ${RELEASE_IMAGE}
          docker push ${RELEASE_IMAGE}
          
          echo "Tagging and pushing latest image: ${LATEST_IMAGE}"
          docker tag ${DEV_IMAGE} ${LATEST_IMAGE}
          docker push ${LATEST_IMAGE}
          
          echo "Release completed successfully"

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ env.VERSION }}
          name: Release v${{ env.VERSION }}
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}